<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>OOO on Nejc Korasa</title>
    <link>https://nejckorasa.github.io/tags/ooo/</link>
    <description>Recent content in OOO on Nejc Korasa</description>
    <image>
      <title>Nejc Korasa</title>
      <url>https://avatars.githubusercontent.com/nejckorasa</url>
      <link>https://avatars.githubusercontent.com/nejckorasa</link>
    </image>
    <generator>Hugo -- 0.146.6</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 18 Apr 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://nejckorasa.github.io/tags/ooo/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Data Oriented Programming (DOP) in Java</title>
      <link>https://nejckorasa.github.io/posts/data-oriented-programming-in-java/</link>
      <pubDate>Fri, 18 Apr 2025 00:00:00 +0000</pubDate>
      <guid>https://nejckorasa.github.io/posts/data-oriented-programming-in-java/</guid>
      <description>&lt;h2 id=&#34;what-is-data-oriented-programming&#34;&gt;What is Data Oriented Programming?&lt;/h2&gt;
&lt;p&gt;Data Oriented Programming (DOP) is gaining momentum in the Java ecosystem due to recent language features streamlining its adoption. While conceptually straightforward, DOP offers significant advantages. But what is it?&lt;/p&gt;
&lt;p&gt;How do we build our objects? Where does the state go? Where does the behavior go? OOO encourages us to bundle state and behavior together. But what if we separated this? What if data became the primary focus, with logic completely separated? This is the central idea of Data Oriented Programming (DOP), simple.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
